" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

nnoremap <C-k> D
inoremap <C-k> <Esc>lC
vnoremap <C-k> d
" 定义删除光标后所有字符的函数

function! DeleteAfterCursor()
    " 获取当前光标在命令行中的位置
    let current_pos = getcmdpos()
    " 获取当前命令行的内容
    let cmdline = getcmdline()
    " 截取字符串，获取光标前的部分
    let new_cmdline = strpart(cmdline, 0, current_pos - 1)
    " 设置新的命令行内容，只保留光标前的部分，去掉光标位置及其后的所有字符
    call setcmdline(new_cmdline)
    return ''
endfunction

" 在命令行模式下映射 <C-k> 为删除光标后的所有字符
" 用表达式寄存器调用删除函数，最后回车
cnoremap <C-k> <C-r>=DeleteAfterCursor()<CR>

" 配置复制、粘贴、剪切快捷键
vnoremap <C-c> "*y
inoremap <C-v> <C-r>*
cnoremap <C-v> <C-r>*
vnoremap <C-v> "*p
vnoremap <C-x> "*d
